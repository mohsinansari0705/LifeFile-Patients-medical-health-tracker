// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Identifies potential health risks based on patient history.
 *
 * - identifyHealthRisks - A function that identifies health risks for a patient.
 * - IdentifyHealthRisksInput - The input type for the identifyHealthRisks function.
 * - IdentifyHealthRisksOutput - The return type for the identifyHealthRisks function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IdentifyHealthRisksInputSchema = z.object({
  medicalHistory: z
    .string()
    .describe('The comprehensive medical history of the patient.'),
});
export type IdentifyHealthRisksInput = z.infer<typeof IdentifyHealthRisksInputSchema>;

const IdentifyHealthRisksOutputSchema = z.object({
  identifiedRisks: z
    .string()
    .describe(
      'A summary of potential health risks identified based on the medical history.'
    ),
});
export type IdentifyHealthRisksOutput = z.infer<typeof IdentifyHealthRisksOutputSchema>;

export async function identifyHealthRisks(
  input: IdentifyHealthRisksInput
): Promise<IdentifyHealthRisksOutput> {
  return identifyHealthRisksFlow(input);
}

const prompt = ai.definePrompt({
  name: 'identifyHealthRisksPrompt',
  input: {schema: IdentifyHealthRisksInputSchema},
  output: {schema: IdentifyHealthRisksOutputSchema},
  prompt: `You are an expert medical professional.

  Based on the provided medical history, identify potential health risks for the patient.
  If no risks are identified, state that clearly.

  Medical History: {{{medicalHistory}}}`,
});

const identifyHealthRisksFlow = ai.defineFlow(
  {
    name: 'identifyHealthRisksFlow',
    inputSchema: IdentifyHealthRisksInputSchema,
    outputSchema: IdentifyHealthRisksOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
